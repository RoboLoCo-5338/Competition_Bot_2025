package frc.robot.subsystems.vision;

import edu.wpi.first.math.geometry.Pose3d;
import edu.wpi.first.math.geometry.Rotation2d;
import org.littletonrobotics.junction.AutoLog;
import org.littletonrobotics.junction.LogTable;
import org.littletonrobotics.junction.inputs.LoggableInputs;

public interface VisionIO {
  @AutoLog
  public static class VisionIOInputs {
    public boolean connected = false;
    public TargetObservation latestTargetObservation =
        new TargetObservation(new Rotation2d(), new Rotation2d());
    public PoseObservation[] poseObservations = new PoseObservation[0];
    public int[] tagIds = new int[0];
  }
  //idk why this is here. It should be autogenerated using Autolog, but it does do the exact same thing
  class VisionIOInputsAutoLogged extends VisionIOInputs implements LoggableInputs {
    public void toLog(LogTable table) {
      table.put("Connected", connected);
      table.put("LatestTargetObservation", latestTargetObservation);
      table.put("PoseObservations", poseObservations);
      table.put("TagIds", tagIds);
    }

    public void fromLog(LogTable table) {
      connected = table.get("Connected", connected);
      latestTargetObservation = table.get("LatestTargetObservation", latestTargetObservation);
      poseObservations = table.get("PoseObservations", poseObservations);
      tagIds = table.get("TagIds", tagIds);
    }
  }

  /** Represents the angle to a simple target, not used for pose estimation. */
  public static record TargetObservation(Rotation2d tx, Rotation2d ty) {}

  /** Represents a robot pose sample used for pose estimation. */
  public static record PoseObservation(
      double timestamp,
      Pose3d pose,
      double ambiguity,
      int tagCount,
      double averageTagDistance,
      PoseObservationType type) {}

  public static enum PoseObservationType {
    MEGATAG_1,
    MEGATAG_2,
    PHOTONVISION
  }

  public default void updateInputs(VisionIOInputs inputs) {}
}
